# Generated by Django 4.2 on 2025-07-24 09:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('egrn_service', '0021_alter_conversion_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoodsIssueLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_issued', models.DecimalField(decimal_places=3, max_digits=15)),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'Goods Issue Line Item',
                'verbose_name_plural': 'Goods Issue Line Items',
            },
        ),
        migrations.CreateModel(
            name='GoodsIssueNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_number', models.IntegerField(unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('posted_to_icg', models.BooleanField(default=False)),
                ('posted_to_sap', models.BooleanField(default=False)),
                ('metadata', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goods Issue Note',
                'verbose_name_plural': 'Goods Issue Notes',
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=32, unique=True)),
                ('sales_order_id', models.IntegerField(unique=True)),
                ('total_net_amount', models.DecimalField(decimal_places=3, max_digits=15)),
                ('order_date', models.DateField()),
                ('delivery_status_code', models.CharField(choices=[('1', 'Not Started'), ('2', 'Partially Delivered'), ('3', 'Completely Delivered')], default='1', max_length=1)),
                ('metadata', models.JSONField(default=dict)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('destination_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbound_orders', to='egrn_service.store')),
                ('source_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbound_orders', to='egrn_service.store')),
            ],
            options={
                'verbose_name': 'Sales Order',
                'verbose_name_plural': 'Sales Orders',
            },
        ),
        migrations.CreateModel(
            name='TransferReceiptNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.IntegerField(unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('posted_to_icg', models.BooleanField(default=False)),
                ('metadata', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('destination_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_received', to='egrn_service.store')),
                ('goods_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='transfer_service.goodsissuenote')),
            ],
            options={
                'verbose_name': 'Transfer Receipt Note',
                'verbose_name_plural': 'Transfer Receipt Notes',
            },
        ),
        migrations.CreateModel(
            name='TransferReceiptLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.DecimalField(decimal_places=3, max_digits=15)),
                ('metadata', models.JSONField(default=dict)),
                ('goods_issue_line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_receipt_items', to='transfer_service.goodsissuelineitem')),
                ('transfer_receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='transfer_service.transferreceiptnote')),
            ],
            options={
                'verbose_name': 'Transfer Receipt Line Item',
                'verbose_name_plural': 'Transfer Receipt Line Items',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=32, unique=True)),
                ('product_id', models.CharField(max_length=32)),
                ('product_name', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=15)),
                ('unit_price', models.DecimalField(decimal_places=3, max_digits=15)),
                ('unit_of_measurement', models.CharField(max_length=32)),
                ('metadata', models.JSONField(default=dict)),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='transfer_service.salesorder')),
            ],
            options={
                'verbose_name': 'Sales Order Line Item',
                'verbose_name_plural': 'Sales Order Line Items',
            },
        ),
        migrations.AddField(
            model_name='goodsissuenote',
            name='sales_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_issues', to='transfer_service.salesorder'),
        ),
        migrations.AddField(
            model_name='goodsissuenote',
            name='source_store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_issued', to='egrn_service.store'),
        ),
        migrations.AddField(
            model_name='goodsissuelineitem',
            name='goods_issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='transfer_service.goodsissuenote'),
        ),
        migrations.AddField(
            model_name='goodsissuelineitem',
            name='sales_order_line_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_issue_items', to='transfer_service.salesorderlineitem'),
        ),
        migrations.CreateModel(
            name='StoreAuthorization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('manager', 'Store Manager'), ('assistant', 'Assistant Manager'), ('clerk', 'Store Clerk'), ('viewer', 'Viewer Only')], max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_users', to='egrn_service.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_authorizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Store Authorization',
                'verbose_name_plural': 'Store Authorizations',
                'unique_together': {('user', 'store')},
            },
        ),
    ]
